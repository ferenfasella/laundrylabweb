<script>
	import { onMount } from 'svelte';
import icon from '$lib/images/logo.png';
import Input from '$lib/components/input.svelte';
import Button from '$lib/components/button.svelte';
import ApiController from '../ApiController.js';
import '@fontsource/montserrat';

let form = {
    idAdmin: "",
    email: "",
    notelp: "",
    password: "",
    namaLaundry: ""
}

let users = [];

const fetchUsers = async () => {
    const token = localStorage.getItem('token');
    try {
        const response = await ApiController({
            method: 'GET',
            endpoint: 'getAdmin',
            token: token
        });

        if (response && response.data && response.data.success) {
            users = response.data.users;
            if (users.length > 0) {
                const lastUserId = users
                    .map(user => parseInt(user.idAdmin))
                    .sort()
                    .pop();
                const incrementedId = lastUserId + 1;
                form.idAdmin = incrementedId.toString(); // Ensure it is a string if necessary
            } else {
                form.idAdmin = '1'; // Start from 1 if no users exist
            }
        } else {
            console.error('Failed to fetch users:', response ? response.data.error : 'No response from server');
        }
    } catch (error) {
        console.error('Error fetching users:', error);
    }
};

function register() {
    if (!isValidEmail(form.email)) {
        alert('Format email salah, silahkan coba lagi!');
        return;
    }

    if (!isValidPhoneNumber(form.notelp)) {
        alert('Format nomor telepon salah, awali dengan 62 dan berjumlah 13 karakter!');
        return;
    }

    const formData = new FormData();
    formData.append('idAdmin', form.idAdmin);
    formData.append('email', form.email);
    formData.append('notelp', form.notelp);
    formData.append('password', form.password);
    formData.append('namaLaundry', form.namaLaundry);

    function postRegister() {
        ApiController({ method: 'POST', endpoint: 'adminRegister', datas: formData }).then(response => {
            alert('successful');
            window.location.href = '/'
        })
    }

    postRegister();
}

function isValidEmail(email) {
    const emailPattern = /\S+@\S+\.\S+/;
    return emailPattern.test(email);
}

function isValidPhoneNumber(phoneNumber) {
    const phoneNumberPattern = /^\d{13}$/;
    return phoneNumberPattern.test(phoneNumber);
}

onMount(fetchUsers);
